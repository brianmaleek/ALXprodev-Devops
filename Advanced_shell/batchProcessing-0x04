#!/bin/bash
# This script is used to automate batch processing of multiple API requests with retry logic.
# Usage: ./batchProcessing-0x02

pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
base_url="https://pokeapi.co/api/v2/pokemon/"
error_file="errors.txt"

# Clear previous error file
> "$error_file"

pids=()
for pokemon in "${pokemon_list[@]}"; do
    output_file="${pokemon}.json"
    echo "Fetching data for $pokemon..."
    (
        status_code=$(curl -s -w "%{http_code}" -o "$output_file" "$base_url/$pokemon")
        if [ "$status_code" -eq 200 ]; then
            echo "Saved data to $output_file ✅"
        else
            echo "❌ Failed to fetch data for $pokemon (HTTP $status_code)" >> "$error_file"
            rm -f "$output_file"
        fi
    ) &
    pids+=("$!")
done

# Wait up to 10 seconds for all jobs, then kill any still running
timeout=10
end_time=$((SECONDS+timeout))
for pid in "${pids[@]}"; do
    while kill -0 "$pid" 2>/dev/null; do
        if [ $SECONDS -ge $end_time ]; then
            kill "$pid" 2>/dev/null
            echo "Process $pid killed due to timeout." >> "$error_file"
            break
        fi
        sleep 1
    done
    wait "$pid" 2>/dev/null
done

echo "Parallel batch processing completed. Check .json files and $error_file for details."
